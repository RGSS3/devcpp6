<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGBgAAAEAIACICQAAFgAAACgAAAAYAAAAMAAAAAEAIAAAAAAAAAkAANJJAADSSQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQCAQAAAAYAAAAMATkcKA1m
        O1wUdkmHFnpNlhR2SYcNZjtcATgcKAAAAAwAAAAGAAQCAQAAAAAAAAAAAAAAAAAAAAAAAAACAAAACQAA
        AAwAAAAMAAAADAAAAAwAAAANAAAAFgAOBi0RYTx5I4hdzyyXbvYvnHT/MJ52/y+cdf8sl272I4hdzxFk
        PnUAEwgiAAAACwEEAgIAAAAAAAAAABba/wAGRm4uFmCNihpjkJEaY5CRGWKQkRlikJEZYpCSEll9lxly
        VrkznHP5OaeB/0Wtiv9OsZD/TbGP/06xkP9FrYr/OaeB/zOcdPodfVKYATYcFgAAAAAAAAAAAAAAAAAA
        AAEZZZSAVJ/O/1im1/9WpNb/VaTW/1Sj1f9TotT/OJSY/zqifv88q4b/OKmD/6PXxv/q9vL/5/Tw/+r2
        8v+j18b/OKmD/zyrhv88pH39IYpcegADAAEAAAAAAAAAAAAAAAMgapiMXqnY/1Kn3f9Qptz/T6Xc/0+l
        3f9Dnr//PqKD/0Kwiv88rYf/PK2I/7Tg0f////////////////+04NH/PK2I/zyth/9DsIv/PKJ65xeD
        UzwAAAAAAAAAAAAAAAEibZuJXqjX/02k2/9Lotr/SaHZ/0eg2P85mpz/S7GM/0Cxi/9AsYv/QLGM/7Xh
        0v////////////////+14dL/QLGM/0Cxi/9AsYv/S7GO/y6Vap8AAAAAAAAAAGnO/wAicaKDWqbW/0qi
        2f9HoNj/RZ7X/z+bzv9AoZD/TriT/0K0jv9CtI7/QrSO/7Xi0/////////////////+14tP/QrSO/0K0
        jv9CtI7/TreU/0CjfOAAAAAAAAAAAEeTwwAhc6V/VaPU/0eg2P9Entf/QZzW/zmXxv9IqZH/T7uW/3fK
        rv+k3Mn/o9vJ/9vx6v/////////////////b8er/o9vJ/6Tcyf93yq7/T7uX/0ush/oAAAAAAAAAAESS
        wwAgcqV/U6LU/0mh2f9Fn9f/QpzW/zqYx/9NrJX/U76a/2XFpf/V8Of/////////////////////////
        /////////////9Xw5/9lxaX/U76a/1CvjPoAAAAAAAAAAEORwwAecqV/U6PV/02k2/9Jodn/Rp/Y/z+b
        z/9LqZv/XMOg/0y+mP9qyqr/2fHp////////////////////////////2fHp/2vKqv9Mvpj/XMOh/06t
        iuAAAAAAAAAAAEGRwwAdcaV/U6PW/1Kn3f9OpNv/SqLZ/0af1/9Doqf/Z8Wk/1LCnf9Rwpz/cs+w/970
        7f/////////////////e9O3/cs+w/1HCnf9Swp3/Z8Wl/0Kkf58AAAAAAAAAAECQxAAdcaV/U6PX/1ap
        3/9Sp93/TqTb/0ui2/9BnsL/X7ig/2LJpv9UxJ//VMag/3nTtf/j9vD//////+P28P9607X/VMag/1TF
        n/9iyab/Yrub5yiVazwAAAAAAAAAAD+RxAAccaaAU6TY/1qt4f9Xqt//VKje/1Kn3f9Ppdv/Sqex/27F
        qP9gyab/Vcag/1XGof9/1bn/z+/k/3/Vuf9Vx6H/Vcag/2HJp/9vxaj9QaWBegAAAAEAAAAAAAAAADmL
        vgAbcKV9VaPV/16o2P9fqNf/ZKvY/22v2f94tNv/frna/223sf9wxKn/bMur/1vHo/9VxaD/Xcil/1XF
        oP9bx6P/bMys/3DFqPhJqoiLC4daCiGTaQAAAAAAAAAAABVqngAQZZtXWqDM+3eu0f9uosP/XZe7/06M
        s/9Jh67/VZC3/2akyP9crbz/ZLms/3HFrP90yqz/ccqs/3PKrP9vw6v/V7Cb4T2jgV4AgFEGJJZtACiY
        bwAAAAAAAAAAAAJZjwAAT4YgSpPC3ozG6/+Zy+r/o87o/6PL5f+Ww+D/c6/V/1Gby/9xtOH/cLng/2S0
        y/9MpbX/Uamz/1Gruv88mLj/EW6XhUynqQAgkm4AKZlyACiYcQAAAAAAAAAAAAFYjwAAADYEMn+wqH+9
        5P+Qx+r/nMzq/6nS6/+22Oz/q9Ho/1WezP9wstz/YK3d/02h1/9cqt7/Xq7h/1Kn3/80i8T2B12VRAph
        lwAXe4EAAAAAAAAAAAAAAAAAAAAAAAJZjwApd6gAGmueY2iq0/+Lxer/l8vr/5/O6/+m0ev/o83n/2Oj
        y/96stb/WafX/3S55v9pteb/Wqzg/02j2v8lfbPTAE2CFgJZjwAAWI0AAAAAAAAAAAAAAAAAAAAAAAJZ
        jwAEW5AAAViOFyl3p4lNkbzGbKfN64i72/6ey+f/oczn/zmFtbwhc6aLW6bW7Xa96v9jsuX/Wqrd/ziL
        v+4QZpxpAAAAAAJZjwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJX5MABVuRAP///wAANnIOBluPLydy
        oWJJirOcW5m/0Ch6rmIAZrkVYqzb3Hm+6v9krdv/Ooe4zw1hlkkAAA4BAE+FAAJZjwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAACWY8AAlmPAAJZjwABWI4ACV6TADh+qgAAAAABAEKAEgBTiwkAcbgfZq3a43Kw
        2P0zf66lAFSKIx9wogAAT4YAAlmPAABJkgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAlmPAAJZjwABWI0ABFyTAAtvrQAKc7UbNIi9vit5qnUANXELCF6TAECGswACWY8AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtu
        rAAOcK4DAF+eFgAAUQEAVo4ABFqQAAFYjwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtvrQALb60ACWmlAAZjnQAGY50AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAA
        AADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAADAMAAAwDAAAcA4AAHAOAABwD+AB8A/+A/AP/g
        /wA=
</value>
  </data>
</root>